{
  "hash": "b824496a849c462d646a1f5ffd0608b4",
  "result": {
    "markdown": "---\ntitle: \"Test page\"\nauthor: \"AgAm sAfaRuDdin\"\n---\n\n\n::: callout-note\nNotes go here ödnajkwdnöjanjlnald\n:::\n\nWith eval: false\n\n\n::: {.cell hash='Test_Training_cache/html/unnamed-chunk-1_41600ba8f9eb93432e3251983253df61'}\n\n```{.r .cell-code}\nnumbers <- 1:1000\n\n# This will print the first 10 elements of the vector numbers\nnumbers[1:10]\n\n# This will plot a histogram of 100 random elements of the vector numbers\nhist(sample(numbers, 100, replace = T))\n```\n:::\n\n\nrandom calculate and print\n\n\n::: {.cell hash='Test_Training_cache/html/unnamed-chunk-2_7e9ece74f1a922d9192ffceee634a831'}\n\n```{.r .cell-code}\na=5\nb=4\nc=a+b\nprint(paste0(c))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"9\"\n```\n:::\n:::\n\n\nwith eval: true\n\n\n::: {.cell hash='Test_Training_cache/html/unnamed-chunk-3_0e42d50b1d7b52b05e352708ba8caa59'}\n\n```{.r .cell-code}\nnumbers <- 1:1000\n\n# This will print the first 10 elements of the vector numbers\nnumbers[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n\n```{.r .cell-code}\n# This will plot a histogram of 100 random elements of the vector numbers\nhist(sample(numbers, 100, replace = T))\n```\n\n::: {.cell-output-display}\n![](Test_Training_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n* An (optional) YAML header surrounded by - - - at the top (there is no need in the beginning to alter it)\nR code chunks surrounded by ```s. These chunks can be customized with knitr options, arguments set at the top of a chunk header after #|:\n  + #| eval: false prevents running the code and include its results\n  + #| include: false prevents code and results from appearing in the finished file. Quarto still runs the code in the chunk, and the results can be used by other chunks.\n  + #| echo: false prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.\n  + #| message: false prevents messages that are generated by code from appearing in the finished file.\n  + #| warning: false prevents warnings that are generated by code from appearing in the finished.\n  + #| fig-cap: \"...\" adds a caption to graphical results.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}